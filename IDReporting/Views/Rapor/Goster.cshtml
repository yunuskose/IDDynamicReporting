@using IDReporting.Models;
@using System.Data;
@using System.Data.SqlClient;

@model DataSet
@{
    ViewBag.Title = Request.QueryString["Isim"];
    IDReportingEntities db = new IDReportingEntities();
    string _kullanici = Server.UrlDecode(Request.Cookies["KullaniciAdi"].Value);
    int SorguID = Convert.ToInt32(ViewBag.SorguID);

    Gorunumler entityGorunum = db.Gorunumlers.Where((e) => e.SorguID == SorguID && e.Kullanici == _kullanici).FirstOrDefault();

}
<h4>Rapor Sonucu - @Request.QueryString["Isim"]</h4>

<div class="DivYukleniyor">Rapor yüklenirken lütfen beyleyin... <br /><img src="@Url.Content("~/Content/loading.gif")" /></div>
<div class="row DivRaporSonucu" style="display:none;" >
    <div class="col-12 col-sm-12">
        <input type="button" name="name" value="Başlıkları Kaydet" class="btn btn-primary" onclick="BasliklariKaydet();" />
        
        <table id="table"
               data-toolbar="#toolbar"
               data-search="true"
               data-show-refresh="false"
               data-show-toggle="false"
               data-show-fullscreen="false"
               data-show-columns="true"
               data-show-columns-toggle-all="true"
               data-detail-view="true"
               data-show-export="true"
               data-click-to-select="true"
               data-detail-formatter="detailFormatter"
               data-minimum-count-columns="1"
               data-show-pagination-switch="true"
               data-pagination="true"
               data-id-field="id"
               data-page-list="[10, 25, 50, 100, all]"
               data-show-footer="true">
            <thead>
                <tr>
                    @foreach (DataColumn baslik in Model.Tables[0].Columns)
                    {
                        <th style="white-space: nowrap;" data-field="@baslik.ColumnName"> @baslik.ColumnName </th>
                    }
                </tr>
            </thead>
            <tbody>

                @foreach (DataRow satir in Model.Tables[0].Rows)
                {
                    <tr>
                        @foreach (DataColumn baslik in Model.Tables[0].Columns)
                        {
                            <th style="white-space: nowrap;">@satir[baslik.ColumnName]</th>
                        }
                    </tr>
                }

            </tbody>
        </table>

    </div>
</div>

</form>
@section Scripts {

    <link href="https://unpkg.com/bootstrap-table@1.21.0/dist/bootstrap-table.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">

    <script src="https://unpkg.com/tableexport.jquery.plugin/tableExport.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.21.0/dist/bootstrap-table.min.js"></script>
    <script src="https://unpkg.com/bootstrap-table@1.21.0/dist/bootstrap-table-locale-all.min.js"></script>

    <style>
        .select,
        #locale {
            width: 100%;
        }

        .like {
            margin-right: 10px;
        }
    </style>

    <script>

        function BasliklariKaydet() {
            var kolonlar = "";
            $('#table thead').find('th').map(function (i) {
                if ($(this).text() != "") {
                    kolonlar += $(this).text() + "|";
                }
            })
            $.ajax({
                        url: '/Rapor/GorunumKaydet/?SorguID=@(ViewBag.SorguID)&Basliklar='+kolonlar,
                        type: 'Get',
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (Data) {
                            alert("Başlıklar kaydedilmiştir.");
                        }
            });

        }

        function BasliklariGoster() {
              @foreach (DataColumn baslik in Model.Tables[0].Columns)
            {
                if(entityGorunum != null)
                {
                    if (entityGorunum.EkAciklama1.Contains(baslik.ColumnName+" |") == false)
                    {
                        @Html.Raw("$table.bootstrapTable('hideColumn', '" + baslik.ColumnName + @"');
");
                    }
                }
            }
        }




        var $table = $('#table')
        var selections = []

        function getIdSelections() {
            return $.map($table.bootstrapTable('getSelections'), function (row) {
                return row.id
            })
        }

        function responseHandler(res) {
            $.each(res.rows, function (i, row) {
                row.state = $.inArray(row.id, selections) !== -1
            })
            return res
        }

        function detailFormatter(index, row) {
            var html = []
            $.each(row, function (key, value) {
                html.push('<p><b>' + key + ':</b> ' + value + '</p>')
            })
            return html.join('')
        }

        function operateFormatter(value, row, index) {
            return [
                '<a class="like" href="javascript:void(0)" title="Like">',
                '<i class="fa fa-heart"></i>',
                '</a>  ',
                '<a class="remove" href="javascript:void(0)" title="Remove">',
                '<i class="fa fa-trash"></i>',
                '</a>'
            ].join('')
        }

        window.operateEvents = {
            'click .like': function (e, value, row, index) {
                alert('You click like action, row: ' + JSON.stringify(row))
            },
            'click .remove': function (e, value, row, index) {
                $table.bootstrapTable('remove', {
                    field: 'id',
                    values: [row.id]
                })
            }
        }

        function totalTextFormatter(data) {
            return 'Total'
        }

        function totalNameFormatter(data) {
            return data.length
        }

        function totalPriceFormatter(data) {
            var field = this.field
            return '$' + data.map(function (row) {
                return +row[field].substring(1)
            }).reduce(function (sum, i) {
                return sum + i
            }, 0)
        }

        function initTable() {
            $table.bootstrapTable('destroy').bootstrapTable({
                height: 550,
                locale: "tr-TR"
            })
            $table.on('check.bs.table uncheck.bs.table ' +
                'check-all.bs.table uncheck-all.bs.table',
                function () {
                    $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)

                    // save your data, here just save the current page
                    selections = getIdSelections()
                    // push or splice the selections if you want to save all data selections
                })
            $table.on('all.bs.table', function (e, name, args) {
                //console.log(name, args);
            })
           
            
        }

        $(function () {
            initTable()

            $('#locale').change(initTable)
            BasliklariGoster();
           
        })
        $(window).on('load', function () {
            $('.DivYukleniyor').hide(); // Loader divini gizle
            $('.DivRaporSonucu').show(); // Diğer loader dışındakileri bir dive al ilk olarak sonra onu göster :)
        });

    </script>
}